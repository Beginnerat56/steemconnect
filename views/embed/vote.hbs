<style type="text/css">
  body {
    margin: 0;
    padding: 0;
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 14px;
    color: #545454;
  }

  a {
    text-decoration: none;
  }

  .vote {
    vertical-align: center;
    display: flex;
    flex-direction: row;
    line-height: 20px;
    height: 20px;
  }

  .btn-vote {
    width: 20px;
    height: 20px;
  }

  .btn-vote circle {
    stroke: #8a8a8a;
    fill: none;
  }

  .btn-vote path {
    fill: #8a8a8a;
  }

  .btn-vote:hover circle {
    stroke: #121313;
    fill: none;
  }

  .btn-vote:hover path {
    fill: #121313;
  }

  .btn-vote.active circle {
    stroke: #4ba2f2;
    fill: #4ba2f2;
  }

  .btn-vote.active path {
    fill: #FFFFFF;
  }

  .count {
    height: 20px;
    margin-left: 4px;
  }
</style>

<div class="vote">
  <a id="vote" href="javascript:" class="btn-vote">
    <svg enable-background="new 0 0 33 33" version="1.1" viewBox="0 0 33 33" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><g id="Chevron_Up_Circle"><circle cx="16" cy="16" r="15" stroke="#121313" fill="none"></circle><path d="M16.699,11.293c-0.384-0.38-1.044-0.381-1.429,0l-6.999,6.899c-0.394,0.391-0.394,1.024,0,1.414 c0.395,0.391,1.034,0.391,1.429,0l6.285-6.195l6.285,6.196c0.394,0.391,1.034,0.391,1.429,0c0.394-0.391,0.394-1.024,0-1.414 L16.699,11.293z" fill="#121313"></path></g></svg>
  </a>
  <span class="count" id="counter"></span>
</div>

<script src="//cdn.steemjs.com/lib/latest/steemconnect.min.js"></script>
<script src="//cdn.steemjs.com/lib/latest/steem.min.js"></script>
<script>
  (function(d) {

    var username = '',
      voted = false,
      content = {},
      author = '{{author}}',
      permlink = '{{permlink}}',
      weight = '{{weight}}',
      domain = '{{domain}}',
      referer = '{{referer}}',
      vote = d.getElementById('vote'),
      counter = d.getElementById('counter');

    function initVote() {
      steem.api.getContent(author, permlink, function(err, result) {
        content = result;
        updateContent();
      });
    }

    function updateContent() {
      counter.innerHTML = content.net_votes;
      if (hasVote()) {
        voted = true;
        vote.setAttribute('class', 'btn-vote active');
      } else {
        voted = false;
        vote.setAttribute('class', 'btn-vote');
      }
    }

    steemconnect.init({
      app: 'steemconnect',
      baseURL: domain,
      callbackURL: domain + '/embed/vote?author={{author}}&permlink={{permlink}}&size=small'
    });

    var loginURL = domain + '/login?redirect_url='+ referer;

    steemconnect.isAuthenticated(function(err, result) {
      username = !err && result.username;
      initVote();
    });

    vote.onclick = toggleVote;

    function toggleVote() {
      if (username) {
        if (voted == true) {
          vote.setAttribute('class', 'btn-vote');
          counter.innerHTML = content.net_votes - 1;
          steemconnect.vote(username, author, permlink, 0, function(err, result){
            initVote();
          });
        } else {
          vote.setAttribute('class', 'btn-vote active');
          counter.innerHTML = content.net_votes + 1;
          steemconnect.vote(username, author, permlink, weight, function(err, result){
            initVote();
          });
        }
      } else {
        window.top.location.href = loginURL;
      }
    }

    function hasVote() {
      var hasVote = false;
      if (username && content.active_votes) {
        content.active_votes.forEach(function(activeVote, key) {
          if (activeVote.voter === username
            && activeVote.percent > 0) {
            hasVote = true;
          }
        });
      }
      return hasVote;
    }

  }(document));
</script>
